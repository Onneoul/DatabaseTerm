<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teammate.find.User.UserMapper">
	<select id="viewUserProfile" parameterType="com.teammate.find.User.User" resultType="com.teammate.find.User.User">
		select * from User where Code = #{code}
	</select>
	<select id="getUserLevel" parameterType="com.teammate.find.User.User" resultType="com.teammate.find.User.User">
		select userLevel from user where Code = #{code}
	</select>
	<select id="getUserbyCode" parameterType="int" resultType="com.teammate.find.User.User">
		select * from user where Code = #{code};
	</select>
	<select id="userLogin" parameterType="com.teammate.find.User.User" resultType="com.teammate.find.User.User">
		select * from user where id = #{id}
	</select>
	<select id="userJoinCheck" parameterType="com.teammate.find.User.User" resultType="com.teammate.find.User.User">
		select * from user where id = #{id}
	</select>
	<select id="getUserNameByCode" parameterType="com.teammate.find.User.User" resultType="string">
		select name from user where code = #{code}
	</select>
	
	
	<select id="getUserTechs" parameterType="com.teammate.find.User.User" resultType="com.teammate.find.User.UserTech">
		select ut.techcode, t.techname, ut.level from tech t inner join usertech ut on t.code = ut.techcode where t.code = any(select techcode from usertech where usercode = #{code})
	</select>
	<select id="getUserProjects" parameterType="com.teammate.find.User.User" resultType="com.teammate.find.Project.Project">
		select p.code, p.title, p.status from project p inner join promoteproject pt on p.code = pt.projectcode 
			where pt.usercode = any(select usercode from promoteproject where usercode = #{code});
	</select>
	
	<insert id="joinUser" parameterType="com.teammate.find.User.User">
		insert into user (id, password, email, name, githubLink) values (#{id}, #{password}, #{email}, #{name}, #{githubLink})
	</insert>
	
	<update id="updateUser" parameterType="com.teammate.find.User.User">
		update user set name = #{name} ,password = #{password}, email = #{email}
	</update>
	
	<delete id="deleteUser" parameterType="com.teammate.find.User.User">
		delete from user where code = #{code}
	</delete>
	
	
</mapper>