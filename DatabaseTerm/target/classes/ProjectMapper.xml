<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teammate.find.Project.ProjectMapper">

	<select id="getProjectCount" parameterType="com.teammate.find.Project.ProjectSelector" resultType="java.lang.Integer">
		select count(*) from Project where title like'%'#{search}'%' or content like '%'#{search}'%'
	</select>
	<select id="viewProject" parameterType="com.teammate.find.Project.Project" resultType="com.teammate.find.Project.Project">
		select * from (
			select @rn := @rn +1 as rn, code, title, content, status, leader from (
				select * from project where title like "%"#{search}"%" or content like "%"#{search}"%" order by code desc
			)projectSearch, (select @rn:=0)rn
		)projectOrder
	</select>
	<select id="viewProjectDetail" parameterType="com.teammate.find.Project.Project" resultType="com.teammate.find.Project.Project">
		select * from project where code = #{code}
	</select>
	<select id="getProjectCode" parameterType="com.teammate.find.Project.Project" resultType="com.teammate.find.Project.Project">
		select code, leader from project where title like "%"#{title}"%" and leader = #{leader} and level = #{level}
	</select>
	
	<insert id="createProject" parameterType="com.teammate.find.Project.Project">
		insert into project (title, content, startDate, leader, level, githubLink) values (#{title}, #{content}, #{startDate}, #{leader}, #{level}, #{githubLink});
	</insert>
	<insert id="createLeader" parameterType="com.teammate.find.Project.Project">
		insert into projectMember (projectCode, userCode, role) values (#{code}, #{leader}, 2)
	</insert>
	
	<update id="updateProject" parameterType="com.teammate.find.Project.Project">
		update project set (title, content, level, githubLink) values (#{title}, #{content}, #{level}, #{githubLink})
	</update>
	<delete id="deleteProject" parameterType="com.teammate.find.Project.Project">
		delete from project where code = #{code}
	</delete>
	<update id="recomendProject" parameterType="com.teammate.find.Project.Project">
		update project set recommend = recommend+1 where code = #{code}
	</update>
	
	<select id="getProjectOffer" parameterType="com.teammate.find.Project.Project" resultType="com.teammate.find.Project.Offer">
		select * from offer where projectcode = #{code}
	</select>
	<select id="getProjectMembers" parameterType="com.teammate.find.Project.Project" resultType="com.teammate.find.User.User">
		select code, id, name from user where code = any(select usercode from promoteproject where projectcode = #{code});
	</select>
	<select id="getProjectTech" parameterType="com.teammate.find.Project.Project" resultType="com.teammate.find.Tech.Tech">
		select * from tech where code = any(select techcode from projectTech where projectCode = #{code});
	</select>
	<select id="getProjectFeedBack" parameterType="com.teammate.find.Project.Project" resultType="com.teammate.find.Project.FeedBack">
		select * from feedback where projectCode = #{code}
	</select>
	
	<insert id="createFeedBack" parameterType="com.teammate.find.Project.FeedBack">
		insert into feedback (projectCode, writer, content, writedate) values (#{projectCode}, #{writer}, #{content}, #{writeDate})
	</insert>
	<delete id="deleteFeedBack" parameterType="com.teammate.find.Project.FeedBack">
		delete from feedback where feedbackcode = #{feedBackCode}
	</delete>
	
	
	
	<insert id="createOffer" parameterType="com.teammate.find.Project.Offer">
		insert into offer (projectCode, UserCode, comment) values (#{projectCode}, #{userCode}, #{comment})
	</insert>
	<delete id="deleteOffer" parameterType="com.teammate.find.Project.Offer">
		delete from Offer where number = #{number}
	</delete>
	<insert id="acceptOffer" parameterType="com.teammate.find.Project.Offer">
		insert into projectmember (usercode, projectcode) values (#{userCode}, #{projectCode})
	</insert>
	
	
	
</mapper>